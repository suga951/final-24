---

// Este bloque debe ser asíncrono para manejar correctamente el uso de `await`
import { app } from '../firebase/server';
import { getAuth } from 'firebase-admin/auth';

const auth = getAuth(app);

async function checkSession() {
  if (Astro.cookies.has('__session')) {
    const sessionCookie = Astro.cookies.get('__session')?.value;
    try {
      const decodedCookie = await auth.verifySessionCookie(sessionCookie!);
      if (decodedCookie) {
        return Astro.redirect('/chat');
      }
    } catch (error) {
      console.error("Error al verificar la cookie de sesión:", error);
      // Manejo de errores, como invalidar la cookie si es necesario
    }
  }
}

await checkSession();

---

<div
  id="loginModal"
  class="fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center hidden dark:bg-opacity-70"
>
  <section
    class="bg-white dark:bg-gray-800 dark:text-white p-6 md:p-10 rounded-2xl shadow-md w-full max-w-md relative"
  >
    <header class="flex justify-end">
      <button
        class="absolute top-4 right-4 text-gray-500 hover:text-gray-700 dark:text-gray-300 dark:hover:text-white"
        id="closeLoginModalBtn"
        type="button"
        aria-label="Cerrar"
      >
        Cerrar
      </button>
    </header>
    <main>
      <h2 id="login-title" class="text-center text-2xl mb-4">Iniciar Sesión</h2>
      <form action="/api/auth/signin" method="post">
        <div class="mb-4">
          <label for="login-email" class="sr-only">Correo Electrónico</label>
          <input
            type="email"
            id="login-email"
            name="email"
            placeholder="Correo Electrónico"
            class="shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            required
          />
        </div>
        <div class="mb-6">
          <label for="login-password" class="sr-only">Contraseña</label>
          <input
            type="password"
            id="login-password"
            name="password"
            placeholder="Contraseña"
            class="shadow appearance-none border rounded-full w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            required
          />
        </div>
        <button 
        onclick="handleLogin()"
          type="submit"
          class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-full w-full focus:outline-none focus:shadow-outline"
        >
          Iniciar Sesión
        </button>
        <div class="text-center mt-4">
          <a
            href="/forgot-password"
            class="text-blue-500 hover:text-blue-700 text-sm"
          >
            ¿Olvidaste tu contraseña?
          </a>
        </div>
      </form>
    </main>
    <footer>
      <div class="text-center mb-4 mt-6">
        <p class="text-gray-600">- O -</p>
      </div>
      <div class="flex flex-col gap-4 mb-6">
        <button
          type="button"
          class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full w-full md:w-auto"
        >
          <img
            src="assets/img/fb.webp"
            alt="Facebook icon"
            class="w-6 h-6 inline-block"
          />
          Iniciar con Facebook
        </button>
        <button
          type="button"
          class="bg-red-400 hover:bg-red-500 text-white font-bold py-2 px-4 rounded-full w-full md:w-auto"
        >
          <img
            src="assets/img/google.webp"
            alt="Google icon"
            class="w-6 h-6 inline-block"
          />
          Iniciar con Google
        </button>
        <button
          type="button"
          class="bg-gray-500 hover:bg-gray-800 text-white font-bold py-2 px-4 rounded-full w-full md:w-auto"
        >
          <img
            src="assets/img/apple.webp"
            alt="Apple icon"
            class="w-6 h-6 inline-block"
          />
          Iniciar con Apple
        </button>
      </div>
    </footer>
  </section>
</div>

<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
  } from 'firebase/auth';
  import { app } from '../firebase/client';

  const auth = getAuth(app);
  // Esto evitará que el navegador almacene datos de sesión
  auth.setPersistence(inMemoryPersistence);

  document.addEventListener('DOMContentLoaded', () => {
    const form = document.querySelector('form');
    if (!form) return;

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(form);
      const email = formData.get('email')?.toString();
      const password = formData.get('password')?.toString();

      if (!email || !password) {
        return;
      }

      try {
        const userCredential = await signInWithEmailAndPassword(auth, email, password);
        const idToken = await userCredential.user.getIdToken();

        // Aquí es donde envías el token al servidor
        const response = await fetch('/api/auth/signin', {
          method: 'POST',  // Asegúrate de que aquí sea POST
          headers: {
            Authorization: `Bearer ${idToken}`,
          },
        });

        if (response.redirected) {
          window.location.assign(response.url);
        } else {
          const text = await response.text();
          console.error("Error:", text); // Muestra el error en la consola si no redirige
        }
      } catch (error) {
        console.error("Error al iniciar sesión:", error);
      }
    });
  });
</script>
